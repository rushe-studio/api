import globals from 'globals';
import tsParser from "@typescript-eslint/parser";
import tsESLint from 'typescript-eslint';
import tsESLintPlugin from '@typescript-eslint/eslint-plugin';

export default tsESLint.config(
    {
        linterOptions: {
            reportUnusedDisableDirectives: 'error'
        }
    },
    {
        languageOptions: {
            globals: {
                ...globals.node,
                ...globals.browser
            },
            ecmaVersion: 'latest',
            sourceType: 'module',
            parser: tsParser,
            parserOptions: {
                tsconfigRootDir: './',
                project: 'tsconfig.json'
            }
        }
    },
    {
        files: ['src/**/*.ts', 'tsconfig.json'],
        ignores: [
            '!tsconfig.json'
        ],
        plugins: {
            '@typescript-eslint': tsESLintPlugin
        },
        rules: {
            "@typescript-eslint/adjacent-overload-signatures": "error",
            "@typescript-eslint/array-type": ["error", {
                default: "array",
            }],
            "@typescript-eslint/await-thenable": "error",
            "@typescript-eslint/ban-types": "error",
            "@typescript-eslint/class-literal-property-style": ["error", "fields"],
            "@typescript-eslint/consistent-generic-constructors": ["error", "type-annotation"],
            "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
            "@typescript-eslint/consistent-type-assertions": ["error", {
                assertionStyle: "as",
                objectLiteralTypeAssertions: "never",
            }],
            "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
            "@typescript-eslint/consistent-type-exports": ["error", {
                fixMixedExportsWithInlineTypeSpecifier: false,
            }],
            "@typescript-eslint/consistent-type-imports": ["error", {
                fixStyle: "separate-type-imports",
                prefer: "type-imports",
            }],
            "@typescript-eslint/default-param-last": "error",
            "@typescript-eslint/member-delimiter-style": ["error", {
                multiline: {
                    delimiter: "semi",
                    requireLast: true,
                },
            }],
            "@typescript-eslint/method-signature-style": ["error", "method"],
            "@typescript-eslint/no-confusing-non-null-assertion": "error",
            "@typescript-eslint/no-confusing-void-expression": "error",
            "@typescript-eslint/no-duplicate-type-constituents": "error",
            "@typescript-eslint/no-empty-interface": "error",
            "@typescript-eslint/no-explicit-any": "error",
            "@typescript-eslint/no-extra-non-null-assertion": "error",
            "@typescript-eslint/no-for-in-array": "error",
            "@typescript-eslint/no-import-type-side-effects": "error",
            "@typescript-eslint/no-invalid-void-type": "error",
            "@typescript-eslint/no-meaningless-void-operator": "error",
            "@typescript-eslint/no-misused-new": "error",
            "@typescript-eslint/no-mixed-enums": "error",
            "@typescript-eslint/no-namespace": "error",
            "@typescript-eslint/no-redundant-type-constituents": "error",
            "@typescript-eslint/no-require-imports": "error",
            "@typescript-eslint/no-shadow": "error",
            "@typescript-eslint/no-this-alias": "error",
            "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
            "@typescript-eslint/no-unnecessary-qualifier": "error",
            "@typescript-eslint/no-unnecessary-type-constraint": "error",
            "@typescript-eslint/no-unsafe-declaration-merging": "error",
            "@typescript-eslint/no-useless-empty-export": "error",
            "@typescript-eslint/prefer-enum-initializers": "error",
            "@typescript-eslint/prefer-for-of": "error",
            "@typescript-eslint/prefer-function-type": "error",
            "@typescript-eslint/prefer-includes": "error",
            "@typescript-eslint/prefer-optional-chain": "error",
            "@typescript-eslint/prefer-readonly": "error",
            "@typescript-eslint/prefer-reduce-type-parameter": "error",
            "@typescript-eslint/prefer-string-starts-ends-with": "error",
            "@typescript-eslint/promise-function-async": "error",
            "@typescript-eslint/require-array-sort-compare": "error",
            "@typescript-eslint/restrict-plus-operands": "error",
            "@typescript-eslint/restrict-template-expressions": "error",
            "array-bracket-newline": ["error", "consistent"],
            "array-bracket-spacing": ["error", "never"],
            "array-callback-return": ["error", {
                allowImplicit: true,
                checkForEach: true,
            }],
            "array-element-newline": ["error", "consistent"],
            "arrow-parens": ["error", "always"],
            "arrow-spacing": ["error", {
                after: true,
                before: true,
            }],
            "block-spacing": ["error", "always"],
            "brace-style": ["error", "1tbs"],
            "comma-dangle": ["error", "never"],
            "comma-spacing": ["error", {
                after: true,
                before: false,
            }],
            "computed-property-spacing": ["error", "never"],
            "constructor-super": ["error"],
            "eol-last": ["error", "always"],
            "for-direction": ["error"],
            "func-call-spacing": ["error", "never"],
            "function-call-argument-newline": ["error", "consistent"],
            indent: ["error", 4],
            "key-spacing": ["error", {
                afterColon: true,
                beforeColon: false,
                mode: "strict",
            }],
            "keyword-spacing": ["error", {
                after: true,
                before: true,
            }],
            "line-comment-position": ["error", {
                position: "above",
            }],
            "max-statements-per-line": ["error", {
                max: 1,
            }],
            "new-parens": ["error", "always"],
            "no-array-constructor": ["error"],
            "no-async-promise-executor": ["error"],
            "no-class-assign": ["error"],
            "no-compare-neg-zero": ["error"],
            "no-cond-assign": ["error"],
            "no-confusing-arrow": ["error", {
                allowParens: true,
                onlyOneSimpleParam: false,
            }],
            "no-const-assign": ["error"],
            "no-constant-condition": ["error"],
            "no-constructor-return": ["error"],
            "no-debugger": ["error"],
            "no-delete-var": ["error"],
            "no-dupe-args": ["error"],
            "no-dupe-class-members": ["error"],
            "no-dupe-else-if": ["error"],
            "no-dupe-keys": ["error"],
            "no-duplicate-case": ["error"],
            "no-else-return": ["error", {
                allowElseIf: true,
            }],
            "no-empty": ["error", {
                allowEmptyCatch: false,
            }],
            "no-empty-pattern": ["error"],
            "no-empty-static-block": ["error"],
            "no-eq-null": ["error"],
            "no-eval": ["error"],
            "no-ex-assign": ["error"],
            "no-extra-boolean-cast": ["error"],
            "no-extra-parens": ["error", "all"],
            "no-extra-semi": ["error"],
            "no-fallthrough": ["error"],
            "no-floating-decimal": ["error"],
            "no-func-assign": ["error"],
            "no-global-assign": ["error"],
            "no-implied-eval": ["error"],
            "no-import-assign": ["error"],
            "no-inline-comments": ["error"],
            "no-inner-declarations": ["error"],
            "no-invalid-this": ["error"],
            "no-irregular-whitespace": ["error", {
                skipComments: true,
                skipRegExps: true,
                skipStrings: true,
                skipTemplates: true,
            }],
            "no-lone-blocks": ["error"],
            "no-loop-func": ["error"],
            "no-multi-assign": ["error"],
            "no-multi-spaces": ["error"],
            "no-multi-str": ["error"],
            "no-multiple-empty-lines": ["error", {
                max: 2,
            }],
            "no-nested-ternary": ["error"],
            "no-new": ["error"],
            "no-new-func": ["error"],
            "no-new-object": ["error"],
            "no-nonoctal-decimal-escape": ["error"],
            "no-octal": ["error"],
            "no-octal-escape": ["error"],
            "no-param-reassign": ["error"],
            "no-redeclare": ["error"],
            "no-return-assign": ["error"],
            "no-script-url": ["error"],
            "no-self-assign": ["error"],
            "no-self-compare": ["error"],
            "no-setter-return": ["error"],
            "no-shadow-restricted-names": ["error"],
            "no-sparse-arrays": ["error"],
            "no-tabs": ["error"],
            "no-this-before-super": ["error"],
            "no-throw-literal": ["error"],
            "no-trailing-spaces": ["error"],
            "no-undef-init": ["error"],
            "no-underscore-dangle": ["error"],
            "no-unexpected-multiline": ["error"],
            "no-unmodified-loop-condition": ["error"],
            "no-unneeded-ternary": ["error"],
            "no-unreachable": ["error"],
            "no-unreachable-loop": ["error"],
            "no-unsafe-finally": ["error"],
            "no-unsafe-negation": ["error"],
            "no-unsafe-optional-chaining": ["error"],
            "no-use-before-define": ["error"],
            "no-useless-catch": ["error"],
            "no-useless-computed-key": ["error"],
            "no-useless-concat": ["error"],
            "no-useless-escape": ["error"],
            "no-useless-rename": ["error"],
            "no-useless-return": ["error"],
            "no-var": ["error"],
            "no-void": ["error"],
            "no-whitespace-before-property": ["error"],
            "no-with": ["error"],
            "object-shorthand": ["error"],
            "object-curly-spacing": ["error", "always"],
            "padded-blocks": ["error", "never"],
            "prefer-arrow-callback": ["error", {
                allowNamedFunctions: true,
                allowUnboundThis: false,
            }],
            "prefer-const": ["error", {
                destructuring: "any",
                ignoreReadBeforeAssign: false,
            }],
            "prefer-exponentiation-operator": ["error"],
            "prefer-object-has-own": ["error"],
            "prefer-object-spread": ["error"],
            "prefer-promise-reject-errors": ["error", {
                allowEmptyReject: false,
            }],
            "prefer-regex-literals": ["error"],
            "prefer-rest-params": ["error"],
            "prefer-spread": ["error"],
            "prefer-template": ["error"],
            quotes: ["error", "single", {
                allowTemplateLiterals: true,
            }],
            radix: ["error", "as-needed"],
            "rest-spread-spacing": ["error", "never"],
            semi: ["error", "always"],
            "semi-spacing": ["error", {
                after: true,
                before: false,
            }],
            "semi-style": ["error", "last"],
            "space-before-blocks": ["error", "always"],
            "space-before-function-paren": ["error", {
                anonymous: "never",
                asyncArrow: "always",
                named: "never",
            }],
            "space-in-parens": ["error", "never"],
            "space-infix-ops": ["error"],
            "space-unary-ops": ["error", {
                nonwords: false,
                words: true,
            }],
            "spaced-comment": ["error", "always"],
            "switch-colon-spacing": ["error", {
                after: true,
                before: false,
            }],
            "template-curly-spacing": ["error", "never"],
            "use-isnan": ["error"],
            "valid-typeof": ["error"],
            "wrap-regex": ["error"],
            yoda: ["error", "never"]
        }
    },
    {
        files: ['**/*.test.ts', '**/*.spec.ts'],
        rules: {
            '@typescript-eslint/no-empty-function': 'off',
            '@typescript-eslint/unbound-method': 'off',
            'import/no-extraneous-dependencies': 'off'
        }
    }
);